---
- name: Check power state of VM
  when: decom_server_type == "virtual"
  block:
    - name: Look up VM Info
      community.vmware.vmware_guest_info:
        hostname: "{{ datacenter_name }}"
        datacenter: "{{ vmware_datacenter }}"
        name: "{{ vmware_guest_name }}"
      register: __server_info
  rescue:
    - name: VM does not exist
      ansible.builtin.set_fact:
        __vm_found: false
      when: "'non-existing' in (__server_info['msg']|default(''))"

    - name: Display VM information
      ansible.builtin.debug:
        msg: "{{ decom_server_name }} does not exist. VM appears to have been deleted previously."
      when: "'non-existing' in (__server_info['msg']|default(''))"

    - name: VM Lookup Failure
      ansible.builtin.fail:
        msg: "Failure checking status of VM {{ decom_server_name }}"
      when: "'non-existing' not in (__server_info['msg']|default(''))"

- name: Assert that server is in powered off state
  ansible.builtin.assert:
    that:
      - __server_info['instance']['hw_power_status']|default('') == 'poweredOff'
    fail_msg: "Server not in powered off state"
  when: __vm_found | default(true)

- name: Include Remove Server Tasks
  ansible.builtin.include_tasks: remove_server.yml

- name: Include Network Cleanup Tasks
  ansible.builtin.include_tasks: network_cleanup.yml

- name: Include AD Cleanup Tasks
  ansible.builtin.include_tasks: ad_cleanup.yml
